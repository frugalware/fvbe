#!/bin/bash

set -e

declare -A FVBE_ROOTFS_PACKAGES

. ./fvbe.conf

cleanup_mounts() {
  echo "Umounting chroot"
  cp /proc/mounts mounts
  while read line; do
         path=$(echo $line | cut -f 2 -d ' ')
         if [ "$path" = "$FVBE_ROOT" ]; then
                 continue
         fi
         if [ "$path" != "${path#$FVBE_ROOT}" ]; then
                 umount $path
         fi
  done < mounts
  if grep -q $FVBE_ROOT mounts
  then
    [ -d "$FVBE_ROOT" ] && umount $FVBE_ROOT
  fi

}

if [ "$(id -u)" -ne 0 ]; then
       echo "You must be root to do this."
       exit 1
fi

if [ ! -e /usr/bin/re2c ]; then
	echo "re2c is missing"
	exit 1
fi

if [ ! -e /usr/bin/mksquashfs ]; then
	echo "mksquashfs is missing"
	exit 1
fi

if [ ! -e /usr/bin/xorriso ]; then
	echo "xorriso is missing"
	exit 1
fi

if [ ! -e /usr/bin/mformat ]; then
        echo "mtools is missing"
        exit 1
fi



if [ "$FVBE_ROOTFS_REPOSITORY" = "current" ]; then
  FDB=frugalware-current.fdb
  MIRROR="http://ftp.frugalware.org/pub/frugalware/frugalware-current/frugalware-$FVBE_ARCH"
elif [ "$FVBE_ROOTFS_REPOSITORY" = "stable" ]; then
  FDB=frugalware.fdb
  MIRROR="http://ftp.frugalware.org/pub/frugalware/frugalware-$FVBE_ISO_RELEASE/frugalware-$FVBE_ARCH"
fi
REPO="${FDB/.fdb/}"
FVBE_ROOTFS_PACKAGES+=${FVBE_ROOTFS_PACKAGES["basic"]}

[ $FVBE_ISO_TYPE != "basic" ] && FVBE_ROOTFS_PACKAGES+="${FVBE_ROOTFS_PACKAGES[$FVBE_ISO_TYPE]}"


# Cleanup from a previous run.
echo "Cleanup"
cleanup_mounts

rm -rf $FVBE_ROOT vmlinuz initrd mounts rootfs.img pacman-g2.conf locales layouts unicode.pf2 $FDB LiveOS

# Setup pacman-g2.conf.
cat > pacman-g2.conf << EOF
[options]
LogFile = /var/log/pacman-g2.log
[$REPO]
Server = $MIRROR
EOF


# Create the virtual disk and mount it.
dd if=/dev/zero of=rootfs.img bs=$(( 128 * 1024 )) count=$(( ($FVBE_ROOTFS_SIZE * 1024 * 1024 * 1024) / (128 * 1024) ))
/sbin/mkfs.ext4 -q -F rootfs.img
mkdir -p $FVBE_ROOT
mount -o loop rootfs.img $FVBE_ROOT

# Create root directory skeleton.
mkdir -p $FVBE_ROOT/{dev,proc,sys,tmp,var/tmp,var/cache/pacman-g2,var/log,etc/sysconfig}

mount -t devtmpfs none $FVBE_ROOT/dev
mount -t sysfs none $FVBE_ROOT/sys
mount -t proc none $FVBE_ROOT/proc
mount -t tmpfs none $FVBE_ROOT/tmp
mount -t tmpfs none $FVBE_ROOT/var/tmp
mount -o bind /var/cache/pacman-g2 $FVBE_ROOT/var/cache/pacman-g2

trap cleanup_mounts ERR

# Bootstrap pacman-g2
pacman-g2 --root $FVBE_ROOT --noconfirm --noscriptlet --config pacman-g2.conf -Sy pacman-g2 netkit-base
cp pacman-g2.conf $FVBE_ROOT/etc
cp /etc/resolv.conf $FVBE_ROOT/etc


# Setup root directory with pacman-g2.
/usr/sbin/chroot $FVBE_ROOT pacman-g2 --noconfirm -Sy $FVBE_ROOTFS_PACKAGES

# LiveCD customizations beyond here.

# Set the default systemd boot target.
ln -sf /lib/systemd/system/graphical.target $FVBE_ROOT/etc/systemd/system/default.target

## enable calamres lang settings service
ln -s $FVBE_ROOT/lib/systemd/system/calamares-locale.service $FVBE_ROOT/lib/systemd/system/multi-user.target.wants/calamares-locale.service

# System fstab setup.
cat > $FVBE_ROOT/etc/fstab << EOF
none /proc proc defaults 0 0
none /sys sysfs defaults 0 0
none /tmp tmpfs defaults 0 0
none /var/tmp tmpfs defaults 0 0
none /dev/shm tmpfs defaults 0 0
none /dev/pts devpts gid=5,mode=620 0 0
EOF

# Setup root user.
sed -i '/root/d' $FVBE_ROOT/etc/shadow
echo "root:$(openssl passwd -1 fvbe):17014:0:::::" >> $FVBE_ROOT/etc/shadow

# Setup guest user.
echo "guest:$(openssl passwd -1 fvbe):17014:0:99999:7:::" >> $FVBE_ROOT/etc/shadow
echo "guest:x:1006:100:Guest user:/home/guest:/bin/bash" >> $FVBE_ROOT/etc/passwd

# System hostname setup.
cat > $FVBE_ROOT/etc/hostname << EOF
$FVBE_ROOTFS_HOSTNAME
EOF

# System pretty hostname setup.
cat > $FVBE_ROOT/etc/machine-info << EOF
PRETTY_HOSTNAME="$FVBE_ROOTFS_PRETTY_HOSTNAME"
EOF


# Copy calamares configuration
mkdir -p $FVBE_ROOT/etc/calamares
cp -r calamares/calamares-config-global/* $FVBE_ROOT/etc/calamares/

# Copy calamares configuration for flavor
[ $FVBE_ISO_TYPE != "basic" ] && cp -r calamares/calamares-config-${FVBE_ISO_TYPE}/* $FVBE_ROOT/etc/calamares/

# Copy calamares frugalware branding
mkdir -p $FVBE_ROOT/usr/share/calamares/branding/frugalware/
cp -r calamares/calamares-frugalware-branding/* $FVBE_ROOT/usr/share/calamares/branding/frugalware/

# set Version
sed -i "s/_version_/$FVBE_ISO_RELEASE/" $FVBE_ROOT/usr/share/calamares/branding/frugalware/branding.desc
sed -i "s/_versionedname_/$(cat $FVBE_ROOT/etc/frugalware-release)/" $FVBE_ROOT/usr/share/calamares/branding/frugalware/branding.desc

# change desktop for users
cp -r guest $FVBE_ROOT/home/

# copy calamares desktop
install -Dm644 "calamares/calamares-frugalware.desktop" "$FVBE_ROOT/usr/share/applications/calamares-frugalware.desktop"
install -Dm644 "calamares/calamares-frugalware.svg" "$FVBE_ROOT/usr/share/icons/hicolor/scalable/apps/calamares-frugalware.svg"


# set permissions for guest user
/usr/sbin/chroot $FVBE_ROOT /usr/bin/chown -R guest.users /home/guest

# sddm autologin
if [ -f "$FVBE_ROOT/etc/sddm.conf" ]
then
  sed -i "s|^Session=.*\$|Session=plasma.desktop|" $FVBE_ROOT/etc/sddm.conf
  sed -i "s|^User=.*\$|User=guest|" $FVBE_ROOT/etc/sddm.conf
fi

# gdm autologin
if [ -f "$FVBE_ROOT/etc/gdm/custom.conf" ]
then
  cp calamares/dm/gdm-custom.conf $FVBE_ROOT/etc/gdm/custom.conf
fi

# allow guest user to start calamares without Password
cp calamares/polkit/49-nopasswd_calamares.rules $FVBE_ROOT/etc/polkit-1/rules.d/


# Cache files or data from the ROOTFS that we'll use in the ISO.
cp $FVBE_ROOT/boot/vmlinuz vmlinuz
cp $FVBE_ROOT/boot/initrd initrd

localedef -f $FVBE_ROOT/usr/lib/locale/locale-archive --list-archive | grep '\.utf8$' | sort --unique > locales

tail -n +3 $FVBE_ROOT/usr/share/systemd/kbd-model-map | cut -f 1 | sort --unique > layouts
cp $FVBE_ROOT/usr/share/grub/unicode.pf2 unicode.pf2

# Copy grub background out of rootfs
cp $FVBE_ROOT/boot/grub/background.png .

# Unmount all paths mounted earlier.
cleanup_mounts

# Now shrink the rootfs.img to minimum size.
/sbin/e2fsck -f -a rootfs.img
/sbin/resize2fs -M rootfs.img
/sbin/e2fsck -f -a rootfs.img

rm -rf ${FVBE_ROOT:?}/*
mkdir $FVBE_ROOT/LiveOS
mv rootfs.img  $FVBE_ROOT/LiveOS/

mksquashfs $FVBE_ROOT squashfs.img -noappend -no-progress -comp lz4 -Xhc -noF -no-fragments
