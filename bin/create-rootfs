#!/bin/sh

set -e

. ./fvbe.conf

if [ "$(id -u)" -ne 0 ]; then
	echo "You must be root to do this."
	exit 1
fi

# Cleanup from a previous run.
cp /proc/mounts mounts
while read line; do
	path=$(echo $line | cut -f 2 -d ' ')
	if [ "$path" = "$FVBE_ROOT" ]; then
		continue
	fi
	if [ "$path" != "${path#$FVBE_ROOT}" ]; then
		umount $path
	fi
done < mounts
[ -d "$FVBE_ROOT" ] && umount $FVBE_ROOT
rm -rf $FVBE_ROOT vmlinuz initrd mounts rootfs.img squashfs.img pacman-g2.conf locales layouts

# Create the virtual disk and mount it.
dd if=/dev/zero of=rootfs.img bs=$(( 128 * 1024 )) count=$(( ($FVBE_ROOTFS_SIZE * 1024 * 1024 * 1024) / (128 * 1024) ))
mkfs.ext4 -q -F rootfs.img
mkdir -p $FVBE_ROOT
mount -o loop rootfs.img $FVBE_ROOT

# Create root directory skeleton.
mkdir -p $FVBE_ROOT/{dev,proc,sys,tmp,var/tmp,var/cache/pacman-g2,var/log,etc/sysconfig}
mount -t devtmpfs none $FVBE_ROOT/dev
mount -t sysfs none $FVBE_ROOT/sys
mount -t proc none $FVBE_ROOT/proc
mount -t tmpfs none $FVBE_ROOT/tmp
mount -t tmpfs none $FVBE_ROOT/var/tmp
mount -o bind /var/cache/pacman-g2 $FVBE_ROOT/var/cache/pacman-g2

# Setup pacman-g2.conf.
cat > pacman-g2.conf << EOF
[options]
LogFile = /var/log/pacman-g2.log
[frugalware$(test "$FVBE_ROOTFS_REPOSITORY" = "current" -o "$FVBE_ROOTFS_REPOSITORY" = "testing" && echo -n "-$FVBE_ROOTFS_REPOSITORY")]
Server = http://ftp.frugalware.org/pub/frugalware/frugalware$(test "$FVBE_ROOTFS_REPOSITORY" = "current" -o "$FVBE_ROOTFS_REPOSITORY" = "testing" && echo -n "-$FVBE_ROOTFS_REPOSITORY")/frugalware-$FVBE_ARCH
EOF

# Setup root directory with pacman-g2.
pacman-g2 --root $FVBE_ROOT --noprogressbar --noconfirm --config pacman-g2.conf -Sy $FVBE_ROOTFS_PACKAGES

# LiveCD customizations beyond here.

# System locale.conf setup.
cat > $FVBE_ROOT/etc/locale.conf << EOF
LANG=$FVBE_ROOTFS_LOCALE
EOF

# System vconsole.conf setup.
cat > $FVBE_ROOT/etc/vconsole.conf << EOF
KEYMAP=$FVBE_ROOTFS_KEYMAP
FONT=$FVBE_ROOTFS_FONT
EOF

# System fstab setup.
cat > $FVBE_ROOT/etc/fstab << EOF
none /proc proc defaults 0 0
none /sys sysfs defaults 0 0
none /tmp tmpfs defaults 0 0
none /var/tmp tmpfs defaults 0 0
none /dev/shm tmpfs defaults 0 0
none /dev/pts devpts gid=5,mode=620 0 0
none /proc/bus/usb usbfs devgid=23,devmode=664 0 0
EOF

# Setup root user.
chroot $FVBE_ROOT sh -c "echo 'root:fwlive' | chpasswd"

# System hostname setup.
cat > $FVBE_ROOT/etc/hostname << EOF
$FVBE_ROOTFS_HOSTNAME
EOF

# Copy kernel and initrd for later use.
cp $FVBE_ROOT/boot/vmlinuz vmlinuz
cp $FVBE_ROOT/boot/initrd initrd

# Cache information from the rootfs for use in pre-boot.
chroot $FVBE_ROOT sh -c "locale --all-locales | grep '\\.utf8$' | sort --unique" > locales
tail -n +3 $FVBE_ROOT/usr/share/systemd/kbd-model-map | cut -f 1 | sort --unique > layouts

# Prune unimportant paths.
if [ "$FVBE_ROOTFS_CLEAN" = "yes" ]; then
  rm -rf $FVBE_ROOT/boot/*
fi

# Unmount all paths mounted earlier.
cp /proc/mounts mounts
while read line; do
	path=$(echo $line | cut -f 2 -d ' ')
	if [ "$path" = "$FVBE_ROOT" ]; then
		continue
	fi
	if [ "$path" != "${path#$FVBE_ROOT}" ]; then
		umount $path
	fi
done < mounts
umount $FVBE_ROOT

# Now shrink the rootfs.img to minimum size.
e2fsck -f -a rootfs.img
resize2fs -M rootfs.img
e2fsck -f -a rootfs.img

# Now prepare the squashfs.
mkdir -p $FVBE_ROOT/LiveOS
mv rootfs.img $FVBE_ROOT/LiveOS/rootfs.img
mksquashfs $FVBE_ROOT squashfs.img -noappend -no-progress -comp $FVBE_ROOTFS_COMPRESS

# Clean up leftovers.
rm -rf mounts $FVBE_ROOT pacman-g2.conf
