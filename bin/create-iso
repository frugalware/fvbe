#!/bin/sh

set -e

. ./fvbe.conf

do_video()
{
  echo "submenu 'Video Resolutions' {"
  for i in 1024x768 800x600 640x480; do
  echo "  menuentry '$i' {"
  echo "    set video=video=$i"
  echo "    export video"
  echo "    configfile /boot/grub/menu.cfg"
  echo "  }"  
  done
  echo "}"
}

do_locales()
{
  echo "submenu 'Locales' {"
  for i in $(cat locales); do
  echo "  menuentry '$i' {"
  echo "    set locale=$i"
  echo "    export locale"
  echo "    configfile /boot/grub/menu.cfg"
  echo "  }"
  done
  echo "}"
}

do_layouts()
{
  echo "submenu 'Keyboard Layouts' {"
  for i in $(cat layouts); do
  echo "  menuentry '$i' {"
  echo "    set layout=$i"
  echo "    export layout"
  echo "    configfile /boot/grub/menu.cfg"
  echo "  }"
  done
  echo "}"
}

# First, clean up.
rm -rf $FVBE_ROOT fvbe-$FVBE_ARCH.iso tmp1 tmp2

# Create the skeleton directory.
mkdir -p $FVBE_ROOT/{boot/grub/fonts,LiveOS}

# Setup kernel and initrd.
cp vmlinuz $FVBE_ROOT/boot/vmlinuz
cp initrd $FVBE_ROOT/boot/initrd

# Setup squashfs image.
cp squashfs.img $FVBE_ROOT/LiveOS/squashfs.img

# Setup the pacman-g2 package cache.
if [ -n "$FVBE_ISO_PACKAGES" ]; then
  mkdir -p $FVBE_ROOT/packages
  for i in $(pacman-g2 -b $(pwd) --config pacman-g2.conf -Sg $FVBE_ISO_PACKAGES); do
    echo $i >> tmp1
  done
  for i in $FVBE_ISO_PACKAGES; do
    sed -i "s|^$i\$||" tmp1
  done
  sort -u < tmp1 > tmp2
  mv -f tmp2 tmp1
  while read line; do
    for i in $line; do
      if [ "$i" != "None" ]; then
        echo $i >> tmp2
      fi
    done
  done << EOF
$(pacman-g2 -b $(pwd) --config pacman-g2.conf -Si $(cat tmp1) | sed -n -r -e '/^Depends On/{:loop;N;/\nRemoves/!b loop;s/\nRemoves.*$//;s/^Depends On[^:]+://;s/[><=]+\S+//g;p}')
EOF
  cat tmp1 >> tmp2
  sort -u < tmp2 > tmp1
  rm -f tmp2
  while read line; do
    name=$(echo $line | cut -d ':' -f 1)
    ver=$(echo $line | cut -d ':' -f 2)
    sum=$(echo $line | cut -d ':' -f 3)
    FPM=$name-$ver-$FVBE_ARCH.fpm
    cp /var/cache/pacman-g2/pkg/$FPM $FVBE_ROOT/packages/$FPM
    echo "$sum  $FVBE_ROOT/packages/$FPM" >> tmp2
  done << EOF
$(pacman-g2 -b $(pwd) --config pacman-g2.conf -Si $(cat tmp1) | sed -n -r '/^Name[^:]+:/{;s/Name[^:]+://;:ver;N;/\nVersion[^:]+:/!{s/\n.*//;b ver};s/\nVersion[^:]+//;:sum;N;/\nSHA1 Sum[^:]+/!{s/\n.*//;b sum};s/\nSHA1 Sum[^:]+//;s/\s+//g;p}')
EOF
  sha1sum -c tmp2
  rm -f tmp1 tmp2
  if [ "$FVBE_ROOTFS_REPOSITORY" = "current" ]; then
    FDB=frugalware-current.fdb
  elif [ "$FVBE_ROOTFS_REPOSITORY" = "stable" ]; then
    FDB=frugalware.fdb
  fi
  cp $FDB $FVBE_ROOT/packages/$FDB
  echo $FVBE_ISO_PACKAGES > $FVBE_ROOT/packages/groups
fi

# Collect some grub files that are not automatically handled.
cp unicode.pf2 $FVBE_ROOT/boot/grub/fonts/unicode.pf2
cat > $FVBE_ROOT/boot/grub/menu.cfg << EOF
menuentry 'Frugalware Versatile Bootable Environment' {
  linux /boot/vmlinuz root=live:CDLABEL=FVBE quiet locale.LANG=\$locale vconsole.keymap=\$layout vconsole.font=$FVBE_FONT \$video
  initrd /boot/initrd
}
menuentry 'Frugalware Versatile Bootable Environment (RAM)' {
  linux /boot/vmlinuz root=live:CDLABEL=FVBE quiet locale.LANG=\$locale vconsole.keymap=\$layout vconsole.font=$FVBE_FONT \$video rd.live.ram=1
  initrd /boot/initrd
}
$(do_video)
$(do_locales)
$(do_layouts)
EOF

# Setup grub2 config.
cat > $FVBE_ROOT/boot/grub/grub.cfg << EOF
set mode=$FVBE_ISO_IO_MODE
set locale=$FVBE_LOCALE
export locale
set layout=$FVBE_LAYOUT
export layout

if [ \$mode = video ]; then
  loadfont unicode
  insmod all_video  
  terminal_input console
  terminal_output gfxterm
elif [ \$mode = serial ]; then
  $FVBE_ISO_IO_SERIAL_GRUB
  terminal_input serial
  terminal_output serial
  terminfo -u vt100-color
fi

configfile /boot/grub/menu.cfg
EOF

# Create the ISO.
grub-mkrescue -o fvbe-$FVBE_ISO_RELEASE-$FVBE_ISO_TYPE-$FVBE_ARCH.iso $FVBE_ROOT -- -boot_image any partition_offset=16 -volid FVBE

# Delete the root directory.
rm -rf $FVBE_ROOT tmp1 tmp2
