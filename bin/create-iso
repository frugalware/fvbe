#!/bin/sh

set -e

. ./fvbe.conf

do_locales()
{
  echo "submenu 'Locales' {"
  for i in $(cat locales); do
  echo "  menuentry '$i' {"
  echo "    LOCALE=$i"
  echo "    export LOCALE"
  echo "    configfile /boot/grub/menu.cfg"
  echo "  }"
  done
  echo "}"
}

do_layouts()
{
  echo "submenu 'Keyboard Layouts' {"
  for i in $(cat layouts); do
  echo "  menuentry '$i' {"
  echo "    LAYOUT=$i"
  echo "    export LAYOUT"
  echo "    configfile /boot/grub/menu.cfg"
  echo "  }"
  done
  echo "}"
}

# First, clean up.
rm -rf $FVBE_ROOT

# Create the skeleton directory.
mkdir -p $FVBE_ROOT/{boot/grub/fonts,LiveOS}

# Setup kernel and initrd.
cp vmlinuz $FVBE_ROOT/boot/vmlinuz
cp initrd $FVBE_ROOT/boot/initrd

# Setup squashfs image.
cp squashfs.img $FVBE_ROOT/LiveOS/squashfs.img

# Collect some grub files that are not automatically handled.
cp /usr/share/grub/unicode.pf2 $FVBE_ROOT/boot/grub/fonts/unicode.pf2
cat > $FVBE_ROOT/boot/grub/menu.cfg << EOF
menuentry 'Frugalware Linux (QEMU Mode)' {
  linux /boot/vmlinuz root=live:CDLABEL=FVBE quiet 800x600 locale.LANG=\$LOCALE vconsole.keymap=\$LAYOUT
  initrd /boot/initrd
}
$(do_locales)
$(do_layouts)
EOF

# Setup grub2 config.
cat > $FVBE_ROOT/boot/grub/grub.cfg << EOF
set mode=$FVBE_ISO_IO_MODE

if [ \$mode = video ]; then
  loadfont unicode
  insmod all_video  
  terminal_input console
  terminal_output gfxterm
elif [ \$mode = serial ]; then
  $FVBE_ISO_IO_SERIAL_GRUB
  terminal_input serial
  terminal_output serial
  terminfo -u vt100-color
fi

configfile /boot/grub/menu.cfg
EOF

# Create the ISO.
grub-mkrescue -o fwlive.iso $FVBE_ROOT -- -boot_image any partition_offset=16 -volid FVBE

# Delete the root directory.
rm -rf $FVBE_ROOT
